version: "3.8"
name: "ecommerce-v2"
services:

  postgres-local:
    container_name: postgres-local
    ports:
      - '5432:5432'
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    volumes:
      - ./entrypoint/postgres:/docker-entrypoint-initdb.d
    networks:
      - local

  mongo-local:
    container_name: mongo-local
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: 1234
    networks:
      - local

  # FOR TEST EMAIL NOTIFICATION
  mailhog-local:
    image: mailhog/mailhog:latest
    container_name: mailhog-local
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - local

  redis-local:
    container_name: redis-local
    ports:
      - '6379:6379'
    image: redis:latest
    networks:
      - local

  rabbitmq-local:
    container_name: rabbitmq-local
    image: rabbitmq:3.11-management
    ports:
      - '15672:15672'
      - '5672:5672'
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "1234"
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management load_definitions \"/etc/rabbitmq/definitions.json\""
    volumes:
      - ./entrypoint/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./data/:/var/lib/rabbitmq/
      - ./log/:/var/log/rabbitmq/
      - ./entrypoint/rabbitmq/plugins:/usr/lib/rabbitmq/plugins

    command: >
      sh -c "
      cp /usr/lib/rabbitmq/plugins/rabbitmq_delayed_message_exchange-3.11.1.ez /plugins/ &&
      rabbitmq-plugins enable --offline rabbitmq_delayed_message_exchange &&
      rabbitmq-server
      "

    networks:
      - local

  # FOR TRACING
  jaeger-local:
    container_name: jaeger-local
    image: jaegertracing/all-in-one:1.37
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '4317:4317'
      - '4318:4318'
      - '14250:14250'
      - '14268:14268'
      - '14269:14269'
      - '9411:9411'

  #ELASTIC
  elasticsearch-local:
    container_name: elasticsearch-local
    image: elasticsearch:8.4.1
    restart: always
    environment:
      - "discovery.type=single-node"
      - "cluster.name=products"
      - "node.name=node1"
      - "bootstrap.memory_lock=false"
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - "xpack.security.enabled=false"
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - ./entrypoint/elasticsearch/init-index.sh:/init-index.sh
      - ./entrypoint/elasticsearch/products-mapping.json:/products-mapping.json

    networks:
      - local
    command: [ ]

  #Kibana
  #  kibana-local:
  #    container_name: kibana-local
  #    image: kibana:8.4.1
  #    depends_on:
  #      - elasticsearch-local
  #    ports:
  #      - '5601:5601'
  #    environment:
  #      - 'ELASTICSEARCH_HOSTS=http://elasticsearch-local:9200'
  #      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
  #    networks:
  #      - local

  # Service Discovery
  consul-local:
    container_name: consul-local
    image: consul:1.10.0
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: agent -dev -client=0.0.0.0 -ui
    volumes:
      - ./entrypoint/consul/init.sh:/init.sh
    entrypoint: [ "/bin/sh", "-c", "consul agent -dev -client=0.0.0.0 -ui & sleep 5 && sh /init.sh && tail -f /dev/null" ]
    networks:
      - local

networks:
  local:
    driver: bridge