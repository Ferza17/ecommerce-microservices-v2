// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: commerce/v1/cartServices.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import {
  CartItem,
  CreateCartItemRequest,
  CreateCartItemResponse,
  DeleteCartItemByIdRequest,
  DeleteCartItemByIdResponse,
  FindCartItemByIdRequest,
  FindCartItemsWithPaginationRequest,
  FindCartItemsWithPaginationResponse,
  UpdateCartItemByIdRequest,
  UpdateCartItemByIdResponse,
} from "./cartMessage";

export const protobufPackage = "pb";

export type CartServiceService = typeof CartServiceService;
export const CartServiceService = {
  createCartItem: {
    path: "/pb.CartService/CreateCartItem",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: CreateCartItemRequest) => Buffer.from(CreateCartItemRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => CreateCartItemRequest.decode(value),
    responseSerialize: (value: CreateCartItemResponse) => Buffer.from(CreateCartItemResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => CreateCartItemResponse.decode(value),
  },
  findCartItemById: {
    path: "/pb.CartService/FindCartItemById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: FindCartItemByIdRequest) => Buffer.from(FindCartItemByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => FindCartItemByIdRequest.decode(value),
    responseSerialize: (value: CartItem) => Buffer.from(CartItem.encode(value).finish()),
    responseDeserialize: (value: Buffer) => CartItem.decode(value),
  },
  findCartItemsWithPagination: {
    path: "/pb.CartService/FindCartItemsWithPagination",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: FindCartItemsWithPaginationRequest) =>
      Buffer.from(FindCartItemsWithPaginationRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => FindCartItemsWithPaginationRequest.decode(value),
    responseSerialize: (value: FindCartItemsWithPaginationResponse) =>
      Buffer.from(FindCartItemsWithPaginationResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => FindCartItemsWithPaginationResponse.decode(value),
  },
  updateCartItemById: {
    path: "/pb.CartService/UpdateCartItemById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: UpdateCartItemByIdRequest) =>
      Buffer.from(UpdateCartItemByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => UpdateCartItemByIdRequest.decode(value),
    responseSerialize: (value: UpdateCartItemByIdResponse) =>
      Buffer.from(UpdateCartItemByIdResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => UpdateCartItemByIdResponse.decode(value),
  },
  deleteCartItemById: {
    path: "/pb.CartService/DeleteCartItemById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: DeleteCartItemByIdRequest) =>
      Buffer.from(DeleteCartItemByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => DeleteCartItemByIdRequest.decode(value),
    responseSerialize: (value: DeleteCartItemByIdResponse) =>
      Buffer.from(DeleteCartItemByIdResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => DeleteCartItemByIdResponse.decode(value),
  },
} as const;

export interface CartServiceServer extends UntypedServiceImplementation {
  createCartItem: handleUnaryCall<CreateCartItemRequest, CreateCartItemResponse>;
  findCartItemById: handleUnaryCall<FindCartItemByIdRequest, CartItem>;
  findCartItemsWithPagination: handleUnaryCall<FindCartItemsWithPaginationRequest, FindCartItemsWithPaginationResponse>;
  updateCartItemById: handleUnaryCall<UpdateCartItemByIdRequest, UpdateCartItemByIdResponse>;
  deleteCartItemById: handleUnaryCall<DeleteCartItemByIdRequest, DeleteCartItemByIdResponse>;
}

export interface CartServiceClient extends Client {
  createCartItem(
    request: CreateCartItemRequest,
    callback: (error: ServiceError | null, response: CreateCartItemResponse) => void,
  ): ClientUnaryCall;
  createCartItem(
    request: CreateCartItemRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: CreateCartItemResponse) => void,
  ): ClientUnaryCall;
  createCartItem(
    request: CreateCartItemRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: CreateCartItemResponse) => void,
  ): ClientUnaryCall;
  findCartItemById(
    request: FindCartItemByIdRequest,
    callback: (error: ServiceError | null, response: CartItem) => void,
  ): ClientUnaryCall;
  findCartItemById(
    request: FindCartItemByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: CartItem) => void,
  ): ClientUnaryCall;
  findCartItemById(
    request: FindCartItemByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: CartItem) => void,
  ): ClientUnaryCall;
  findCartItemsWithPagination(
    request: FindCartItemsWithPaginationRequest,
    callback: (error: ServiceError | null, response: FindCartItemsWithPaginationResponse) => void,
  ): ClientUnaryCall;
  findCartItemsWithPagination(
    request: FindCartItemsWithPaginationRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: FindCartItemsWithPaginationResponse) => void,
  ): ClientUnaryCall;
  findCartItemsWithPagination(
    request: FindCartItemsWithPaginationRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: FindCartItemsWithPaginationResponse) => void,
  ): ClientUnaryCall;
  updateCartItemById(
    request: UpdateCartItemByIdRequest,
    callback: (error: ServiceError | null, response: UpdateCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  updateCartItemById(
    request: UpdateCartItemByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: UpdateCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  updateCartItemById(
    request: UpdateCartItemByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: UpdateCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  deleteCartItemById(
    request: DeleteCartItemByIdRequest,
    callback: (error: ServiceError | null, response: DeleteCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  deleteCartItemById(
    request: DeleteCartItemByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: DeleteCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  deleteCartItemById(
    request: DeleteCartItemByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: DeleteCartItemByIdResponse) => void,
  ): ClientUnaryCall;
}

export const CartServiceClient = makeGenericClientConstructor(CartServiceService, "pb.CartService") as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): CartServiceClient;
  service: typeof CartServiceService;
  serviceName: string;
};
