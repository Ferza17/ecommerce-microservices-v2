// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: payment/v1/paymentServices.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { FindPaymentByIdRequest, Payment } from "./paymentMessage";

export const protobufPackage = "payment_v1";

export type PaymentServiceService = typeof PaymentServiceService;
export const PaymentServiceService = {
  findPaymentById: {
    path: "/payment_v1.PaymentService/FindPaymentById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: FindPaymentByIdRequest) => Buffer.from(FindPaymentByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => FindPaymentByIdRequest.decode(value),
    responseSerialize: (value: Payment) => Buffer.from(Payment.encode(value).finish()),
    responseDeserialize: (value: Buffer) => Payment.decode(value),
  },
} as const;

export interface PaymentServiceServer extends UntypedServiceImplementation {
  findPaymentById: handleUnaryCall<FindPaymentByIdRequest, Payment>;
}

export interface PaymentServiceClient extends Client {
  findPaymentById(
    request: FindPaymentByIdRequest,
    callback: (error: ServiceError | null, response: Payment) => void,
  ): ClientUnaryCall;
  findPaymentById(
    request: FindPaymentByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: Payment) => void,
  ): ClientUnaryCall;
  findPaymentById(
    request: FindPaymentByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: Payment) => void,
  ): ClientUnaryCall;
}

export const PaymentServiceClient = makeGenericClientConstructor(
  PaymentServiceService,
  "payment_v1.PaymentService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): PaymentServiceClient;
  service: typeof PaymentServiceService;
  serviceName: string;
};
