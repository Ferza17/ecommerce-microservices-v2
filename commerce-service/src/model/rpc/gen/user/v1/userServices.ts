// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: user/v1/userServices.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { FindUserByEmailAndPasswordRequest, FindUserByIdRequest, User } from "./userMessage";

export const protobufPackage = "user_v1";

export type UserServiceService = typeof UserServiceService;
export const UserServiceService = {
  findUserById: {
    path: "/user_v1.UserService/FindUserById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: FindUserByIdRequest) => Buffer.from(FindUserByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => FindUserByIdRequest.decode(value),
    responseSerialize: (value: User) => Buffer.from(User.encode(value).finish()),
    responseDeserialize: (value: Buffer) => User.decode(value),
  },
  findUserByEmailAndPassword: {
    path: "/user_v1.UserService/FindUserByEmailAndPassword",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: FindUserByEmailAndPasswordRequest) =>
      Buffer.from(FindUserByEmailAndPasswordRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => FindUserByEmailAndPasswordRequest.decode(value),
    responseSerialize: (value: User) => Buffer.from(User.encode(value).finish()),
    responseDeserialize: (value: Buffer) => User.decode(value),
  },
} as const;

export interface UserServiceServer extends UntypedServiceImplementation {
  findUserById: handleUnaryCall<FindUserByIdRequest, User>;
  findUserByEmailAndPassword: handleUnaryCall<FindUserByEmailAndPasswordRequest, User>;
}

export interface UserServiceClient extends Client {
  findUserById(
    request: FindUserByIdRequest,
    callback: (error: ServiceError | null, response: User) => void,
  ): ClientUnaryCall;
  findUserById(
    request: FindUserByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: User) => void,
  ): ClientUnaryCall;
  findUserById(
    request: FindUserByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: User) => void,
  ): ClientUnaryCall;
  findUserByEmailAndPassword(
    request: FindUserByEmailAndPasswordRequest,
    callback: (error: ServiceError | null, response: User) => void,
  ): ClientUnaryCall;
  findUserByEmailAndPassword(
    request: FindUserByEmailAndPasswordRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: User) => void,
  ): ClientUnaryCall;
  findUserByEmailAndPassword(
    request: FindUserByEmailAndPasswordRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: User) => void,
  ): ClientUnaryCall;
}

export const UserServiceClient = makeGenericClientConstructor(UserServiceService, "user_v1.UserService") as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): UserServiceClient;
  service: typeof UserServiceService;
  serviceName: string;
};
