{
  "swagger": "2.0",
  "info": {
    "title": "USER SERVICE API",
    "description": "API for USER, AUTHENTICATION, and AUTHORIZATION",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "UserService"
    },
    {
      "name": "AuthService"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user.AuthService/AuthServiceVerifyIsExcluded": {
      "post": {
        "operationId": "AuthService_AuthServiceVerifyIsExcluded",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userAuthServiceVerifyIsExcludedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAuthServiceVerifyIsExcludedRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/user.AuthService/AuthUserVerifyAccessControl": {
      "post": {
        "operationId": "AuthService_AuthUserVerifyAccessControl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userAuthUserVerifyAccessControlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAuthUserVerifyAccessControlRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/user.UserService/FindUserByEmailAndPassword": {
      "post": {
        "operationId": "UserService_FindUserByEmailAndPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userFindUserByEmailAndPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userFindUserByEmailAndPasswordRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/auth/login": {
      "post": {
        "summary": "user login by email and password for get access token and refresh token",
        "operationId": "AuthService_AuthUserLoginByEmailAndPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/user/auth/logout": {
      "post": {
        "summary": "logout user by token",
        "description": "logout customer by provided token request",
        "operationId": "AuthService_AuthUserLogoutByToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userAuthUserLogoutByTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAuthUserLogoutByTokenRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/user/auth/otp/verify": {
      "post": {
        "summary": "verify user otp with provided otp",
        "operationId": "AuthService_AuthUserVerifyOtp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userAuthUserVerifyOtpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAuthUserVerifyOtpRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/user/auth/register": {
      "post": {
        "summary": "register customer by provided request",
        "operationId": "AuthService_AuthUserRegister",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Role",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CUSTOMER",
              "CUSTOMER_MEMBERSHIP",
              "ADMIN",
              "SUPER_ADMIN"
            ],
            "default": "CUSTOMER"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/user/auth/{token}": {
      "get": {
        "summary": "get user otp with provided token",
        "operationId": "AuthService_AuthUserFindUserByToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userAuthUserFindUserByTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/user/users/{id}": {
      "get": {
        "summary": "get user with provided id",
        "operationId": "UserService_FindUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userFindUserByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "summary": "update existing user by provided id",
        "operationId": "UserService_UpdateUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserServiceUpdateUserByIdBody"
            }
          }
        ],
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AuthServiceVerifyIsExcludedResponseAuthServiceVerifyIsExcludedResponseData": {
      "type": "object",
      "properties": {
        "IsExcluded": {
          "type": "boolean"
        }
      }
    },
    "AuthUserFindUserByTokenResponseAuthUserFindUserByTokenResponseData": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      }
    },
    "AuthUserLogoutByTokenResponseAuthUserLogoutByTokenResponseData": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean"
        }
      }
    },
    "AuthUserVerifyAccessControlResponseAuthUserVerifyAccessControlResponseData": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean"
        },
        "user": {
          "$ref": "#/definitions/userUser"
        },
        "role": {
          "$ref": "#/definitions/userRole"
        },
        "accessControls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userAccessControl"
          }
        }
      }
    },
    "AuthUserVerifyOtpResponseAuthUserVerifyOtpResponseData": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "FindUserByEmailAndPasswordResponseFindUserByEmailAndPasswordResponseData": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      }
    },
    "FindUserByIdResponseFindUserByIdResponseData": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      }
    },
    "UserServiceUpdateUserByIdBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isVerified": {
          "type": "boolean"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userAccessControl": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullMethodName": {
          "type": "string"
        },
        "httpUrl": {
          "type": "string"
        },
        "httpMethod": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "roleId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "userAuthServiceVerifyIsExcludedRequest": {
      "type": "object",
      "properties": {
        "fullMethodName": {
          "type": "string"
        },
        "httpUrl": {
          "type": "string"
        },
        "httpMethod": {
          "type": "string"
        }
      }
    },
    "userAuthServiceVerifyIsExcludedResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/AuthServiceVerifyIsExcludedResponseAuthServiceVerifyIsExcludedResponseData"
        }
      }
    },
    "userAuthUserFindUserByTokenResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/AuthUserFindUserByTokenResponseAuthUserFindUserByTokenResponseData"
        }
      }
    },
    "userAuthUserLogoutByTokenRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "userAuthUserLogoutByTokenResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/AuthUserLogoutByTokenResponseAuthUserLogoutByTokenResponseData"
        }
      }
    },
    "userAuthUserVerifyAccessControlRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "fullMethodName": {
          "type": "string"
        },
        "httpUrl": {
          "type": "string"
        },
        "httpMethod": {
          "type": "string"
        }
      }
    },
    "userAuthUserVerifyAccessControlResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/AuthUserVerifyAccessControlResponseAuthUserVerifyAccessControlResponseData"
        }
      }
    },
    "userAuthUserVerifyOtpRequest": {
      "type": "object",
      "properties": {
        "otp": {
          "type": "string"
        }
      }
    },
    "userAuthUserVerifyOtpResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/AuthUserVerifyOtpResponseAuthUserVerifyOtpResponseData"
        }
      }
    },
    "userEnumRole": {
      "type": "string",
      "enum": [
        "CUSTOMER",
        "CUSTOMER_MEMBERSHIP",
        "ADMIN",
        "SUPER_ADMIN"
      ],
      "default": "CUSTOMER"
    },
    "userFindUserByEmailAndPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "userFindUserByEmailAndPasswordResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/FindUserByEmailAndPasswordResponseFindUserByEmailAndPasswordResponseData"
        }
      }
    },
    "userFindUserByIdResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/FindUserByIdResponseFindUserByIdResponseData"
        }
      }
    },
    "userRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/userEnumRole"
        },
        "accessControls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userAccessControl"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "userUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isVerified": {
          "type": "boolean"
        },
        "role": {
          "$ref": "#/definitions/userRole"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "discardedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Bearer Token (e.g., JWT) for authentication. Format: `Bearer YOUR_TOKEN`",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
