// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package consumer

import (
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/infrastructure/rabbitmq"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/infrastructure/telemetry"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/module/payment/usecase"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/pkg/logger"
)

// Injectors from wire.go:

// ProvidePaymentConsumer initializes the paymentConsumer using Wire.
func ProvidePaymentConsumer() IPaymentConsumer {
	iZapLogger := logger.ProvideLogger()
	iRabbitMQInfrastructure := rabbitmq.ProvideRabbitMQInfrastructure(iZapLogger)
	iTelemetryInfrastructure := telemetry.ProvideTelemetry(iZapLogger)
	iPaymentUseCase := usecase.ProvidePaymentUseCase()
	iPaymentConsumer := NewPaymentConsumer(iRabbitMQInfrastructure, iTelemetryInfrastructure, iPaymentUseCase, iZapLogger)
	return iPaymentConsumer
}
