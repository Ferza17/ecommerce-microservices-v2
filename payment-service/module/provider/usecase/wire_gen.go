// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package usecase

import (
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/infrastructure/rabbitmq"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/infrastructure/telemetry"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/module/provider/repository"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/pkg/logger"
)

// Injectors from wire.go:

// ProvidePaymentProvider initializes the paymentProvider with its dependencies.
func ProvidePaymentProviderUseCase() IPaymentProviderUseCase {
	iPaymentProviderRepository := repository.ProvidePaymentProviderRepository()
	iZapLogger := logger.ProvideLogger()
	iRabbitMQInfrastructure := rabbitmq.ProvideRabbitMQInfrastructure(iZapLogger)
	iTelemetryInfrastructure := telemetry.ProvideTelemetry(iZapLogger)
	iPaymentProviderUseCase := NewPaymentProviderUseCase(iPaymentProviderRepository, iRabbitMQInfrastructure, iTelemetryInfrastructure, iZapLogger)
	return iPaymentProviderUseCase
}
