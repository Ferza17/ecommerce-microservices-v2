// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package presenter

import (
	"context"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/infrastructure/telemetry"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/module/provider/usecase"
	"github.com/ferza17/ecommerce-microservices-v2/payment-service/pkg/logger"
	"github.com/google/wire"
)

// Injectors from wire.go:

// ProvidePaymentProviderPresenter initializes and returns an IPaymentProviderPresenter.
func ProvidePaymentProviderPresenter(ctx context.Context) (IPaymentProviderPresenter, error) {
	iPaymentProviderUseCase := usecase.ProvidePaymentProviderUseCase()
	iZapLogger := logger.ProvideLogger()
	iTelemetryInfrastructure := telemetry.ProvideTelemetry(iZapLogger)
	iPaymentProviderPresenter := NewPaymentProviderPresenter(iPaymentProviderUseCase, iTelemetryInfrastructure, iZapLogger)
	return iPaymentProviderPresenter, nil
}

// wire.go:

// PaymentProviderPresenterSet is a provider set for the NewPaymentProviderPresenter and its dependencies.
var PaymentProviderPresenterSet = wire.NewSet(usecase.ProvidePaymentProviderUseCase, telemetry.ProvideTelemetry, logger.ProvideLogger, NewPaymentProviderPresenter)
