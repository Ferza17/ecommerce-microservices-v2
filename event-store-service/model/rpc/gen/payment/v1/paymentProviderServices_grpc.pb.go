// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: payment/v1/paymentProviderServices.proto

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PaymentProviderServiceClient is the client API for PaymentProviderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PaymentProviderServiceClient interface {
	FindPaymentProviders(ctx context.Context, in *FindPaymentProvidersRequest, opts ...grpc.CallOption) (*FindPaymentProvidersResponse, error)
}

type paymentProviderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPaymentProviderServiceClient(cc grpc.ClientConnInterface) PaymentProviderServiceClient {
	return &paymentProviderServiceClient{cc}
}

func (c *paymentProviderServiceClient) FindPaymentProviders(ctx context.Context, in *FindPaymentProvidersRequest, opts ...grpc.CallOption) (*FindPaymentProvidersResponse, error) {
	out := new(FindPaymentProvidersResponse)
	err := c.cc.Invoke(ctx, "/payment_v1.PaymentProviderService/FindPaymentProviders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentProviderServiceServer is the server API for PaymentProviderService service.
// All implementations should embed UnimplementedPaymentProviderServiceServer
// for forward compatibility
type PaymentProviderServiceServer interface {
	FindPaymentProviders(context.Context, *FindPaymentProvidersRequest) (*FindPaymentProvidersResponse, error)
}

// UnimplementedPaymentProviderServiceServer should be embedded to have forward compatible implementations.
type UnimplementedPaymentProviderServiceServer struct {
}

func (UnimplementedPaymentProviderServiceServer) FindPaymentProviders(context.Context, *FindPaymentProvidersRequest) (*FindPaymentProvidersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPaymentProviders not implemented")
}

// UnsafePaymentProviderServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PaymentProviderServiceServer will
// result in compilation errors.
type UnsafePaymentProviderServiceServer interface {
	mustEmbedUnimplementedPaymentProviderServiceServer()
}

func RegisterPaymentProviderServiceServer(s grpc.ServiceRegistrar, srv PaymentProviderServiceServer) {
	s.RegisterService(&PaymentProviderService_ServiceDesc, srv)
}

func _PaymentProviderService_FindPaymentProviders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindPaymentProvidersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentProviderServiceServer).FindPaymentProviders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment_v1.PaymentProviderService/FindPaymentProviders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentProviderServiceServer).FindPaymentProviders(ctx, req.(*FindPaymentProvidersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PaymentProviderService_ServiceDesc is the grpc.ServiceDesc for PaymentProviderService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PaymentProviderService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "payment_v1.PaymentProviderService",
	HandlerType: (*PaymentProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindPaymentProviders",
			Handler:    _PaymentProviderService_FindPaymentProviders_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payment/v1/paymentProviderServices.proto",
}
