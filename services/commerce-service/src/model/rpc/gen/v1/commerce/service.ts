// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: v1/commerce/service.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { CartItem } from "./model";
import {
  CreateCartItemRequest,
  CreateWishlistItemRequest,
  DeleteCartItemByIdRequest,
  DeleteWishlistItemByIdRequest,
  FindCartItemByIdRequest,
  FindCartItemsWithPaginationRequest,
  FindWishlistItemWithPaginationRequest,
  UpdateCartItemByIdRequest,
} from "./request";
import {
  CreateCartItemResponse,
  CreateWishlistItemResponse,
  DeleteCartItemByIdResponse,
  DeleteWishlistItemByIdResponse,
  FindCartItemsWithPaginationResponse,
  FindWishlistItemWithPaginationResponse,
  UpdateCartItemByIdResponse,
} from "./response";

export const protobufPackage = "commerce";

export type CartServiceService = typeof CartServiceService;
export const CartServiceService = {
  createCartItem: {
    path: "/commerce.CartService/CreateCartItem",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: CreateCartItemRequest) => Buffer.from(CreateCartItemRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => CreateCartItemRequest.decode(value),
    responseSerialize: (value: CreateCartItemResponse) => Buffer.from(CreateCartItemResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => CreateCartItemResponse.decode(value),
  },
  findCartItemById: {
    path: "/commerce.CartService/FindCartItemById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: FindCartItemByIdRequest) => Buffer.from(FindCartItemByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => FindCartItemByIdRequest.decode(value),
    responseSerialize: (value: CartItem) => Buffer.from(CartItem.encode(value).finish()),
    responseDeserialize: (value: Buffer) => CartItem.decode(value),
  },
  findCartItemsWithPagination: {
    path: "/commerce.CartService/FindCartItemsWithPagination",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: FindCartItemsWithPaginationRequest) =>
      Buffer.from(FindCartItemsWithPaginationRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => FindCartItemsWithPaginationRequest.decode(value),
    responseSerialize: (value: FindCartItemsWithPaginationResponse) =>
      Buffer.from(FindCartItemsWithPaginationResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => FindCartItemsWithPaginationResponse.decode(value),
  },
  updateCartItemById: {
    path: "/commerce.CartService/UpdateCartItemById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: UpdateCartItemByIdRequest) =>
      Buffer.from(UpdateCartItemByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => UpdateCartItemByIdRequest.decode(value),
    responseSerialize: (value: UpdateCartItemByIdResponse) =>
      Buffer.from(UpdateCartItemByIdResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => UpdateCartItemByIdResponse.decode(value),
  },
  deleteCartItemById: {
    path: "/commerce.CartService/DeleteCartItemById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: DeleteCartItemByIdRequest) =>
      Buffer.from(DeleteCartItemByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => DeleteCartItemByIdRequest.decode(value),
    responseSerialize: (value: DeleteCartItemByIdResponse) =>
      Buffer.from(DeleteCartItemByIdResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => DeleteCartItemByIdResponse.decode(value),
  },
} as const;

export interface CartServiceServer extends UntypedServiceImplementation {
  createCartItem: handleUnaryCall<CreateCartItemRequest, CreateCartItemResponse>;
  findCartItemById: handleUnaryCall<FindCartItemByIdRequest, CartItem>;
  findCartItemsWithPagination: handleUnaryCall<FindCartItemsWithPaginationRequest, FindCartItemsWithPaginationResponse>;
  updateCartItemById: handleUnaryCall<UpdateCartItemByIdRequest, UpdateCartItemByIdResponse>;
  deleteCartItemById: handleUnaryCall<DeleteCartItemByIdRequest, DeleteCartItemByIdResponse>;
}

export interface CartServiceClient extends Client {
  createCartItem(
    request: CreateCartItemRequest,
    callback: (error: ServiceError | null, response: CreateCartItemResponse) => void,
  ): ClientUnaryCall;
  createCartItem(
    request: CreateCartItemRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: CreateCartItemResponse) => void,
  ): ClientUnaryCall;
  createCartItem(
    request: CreateCartItemRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: CreateCartItemResponse) => void,
  ): ClientUnaryCall;
  findCartItemById(
    request: FindCartItemByIdRequest,
    callback: (error: ServiceError | null, response: CartItem) => void,
  ): ClientUnaryCall;
  findCartItemById(
    request: FindCartItemByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: CartItem) => void,
  ): ClientUnaryCall;
  findCartItemById(
    request: FindCartItemByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: CartItem) => void,
  ): ClientUnaryCall;
  findCartItemsWithPagination(
    request: FindCartItemsWithPaginationRequest,
    callback: (error: ServiceError | null, response: FindCartItemsWithPaginationResponse) => void,
  ): ClientUnaryCall;
  findCartItemsWithPagination(
    request: FindCartItemsWithPaginationRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: FindCartItemsWithPaginationResponse) => void,
  ): ClientUnaryCall;
  findCartItemsWithPagination(
    request: FindCartItemsWithPaginationRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: FindCartItemsWithPaginationResponse) => void,
  ): ClientUnaryCall;
  updateCartItemById(
    request: UpdateCartItemByIdRequest,
    callback: (error: ServiceError | null, response: UpdateCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  updateCartItemById(
    request: UpdateCartItemByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: UpdateCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  updateCartItemById(
    request: UpdateCartItemByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: UpdateCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  deleteCartItemById(
    request: DeleteCartItemByIdRequest,
    callback: (error: ServiceError | null, response: DeleteCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  deleteCartItemById(
    request: DeleteCartItemByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: DeleteCartItemByIdResponse) => void,
  ): ClientUnaryCall;
  deleteCartItemById(
    request: DeleteCartItemByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: DeleteCartItemByIdResponse) => void,
  ): ClientUnaryCall;
}

export const CartServiceClient = makeGenericClientConstructor(
  CartServiceService,
  "commerce.CartService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): CartServiceClient;
  service: typeof CartServiceService;
  serviceName: string;
};

export type WishlistServiceService = typeof WishlistServiceService;
export const WishlistServiceService = {
  /** QUERY */
  findWishlistItemWithPagination: {
    path: "/commerce.WishlistService/FindWishlistItemWithPagination",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: FindWishlistItemWithPaginationRequest) =>
      Buffer.from(FindWishlistItemWithPaginationRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => FindWishlistItemWithPaginationRequest.decode(value),
    responseSerialize: (value: FindWishlistItemWithPaginationResponse) =>
      Buffer.from(FindWishlistItemWithPaginationResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => FindWishlistItemWithPaginationResponse.decode(value),
  },
  /** COMMAND */
  createWishlistItem: {
    path: "/commerce.WishlistService/CreateWishlistItem",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: CreateWishlistItemRequest) =>
      Buffer.from(CreateWishlistItemRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => CreateWishlistItemRequest.decode(value),
    responseSerialize: (value: CreateWishlistItemResponse) =>
      Buffer.from(CreateWishlistItemResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => CreateWishlistItemResponse.decode(value),
  },
  deleteWishlistItemById: {
    path: "/commerce.WishlistService/DeleteWishlistItemById",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: DeleteWishlistItemByIdRequest) =>
      Buffer.from(DeleteWishlistItemByIdRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => DeleteWishlistItemByIdRequest.decode(value),
    responseSerialize: (value: DeleteWishlistItemByIdResponse) =>
      Buffer.from(DeleteWishlistItemByIdResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => DeleteWishlistItemByIdResponse.decode(value),
  },
} as const;

export interface WishlistServiceServer extends UntypedServiceImplementation {
  /** QUERY */
  findWishlistItemWithPagination: handleUnaryCall<
    FindWishlistItemWithPaginationRequest,
    FindWishlistItemWithPaginationResponse
  >;
  /** COMMAND */
  createWishlistItem: handleUnaryCall<CreateWishlistItemRequest, CreateWishlistItemResponse>;
  deleteWishlistItemById: handleUnaryCall<DeleteWishlistItemByIdRequest, DeleteWishlistItemByIdResponse>;
}

export interface WishlistServiceClient extends Client {
  /** QUERY */
  findWishlistItemWithPagination(
    request: FindWishlistItemWithPaginationRequest,
    callback: (error: ServiceError | null, response: FindWishlistItemWithPaginationResponse) => void,
  ): ClientUnaryCall;
  findWishlistItemWithPagination(
    request: FindWishlistItemWithPaginationRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: FindWishlistItemWithPaginationResponse) => void,
  ): ClientUnaryCall;
  findWishlistItemWithPagination(
    request: FindWishlistItemWithPaginationRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: FindWishlistItemWithPaginationResponse) => void,
  ): ClientUnaryCall;
  /** COMMAND */
  createWishlistItem(
    request: CreateWishlistItemRequest,
    callback: (error: ServiceError | null, response: CreateWishlistItemResponse) => void,
  ): ClientUnaryCall;
  createWishlistItem(
    request: CreateWishlistItemRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: CreateWishlistItemResponse) => void,
  ): ClientUnaryCall;
  createWishlistItem(
    request: CreateWishlistItemRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: CreateWishlistItemResponse) => void,
  ): ClientUnaryCall;
  deleteWishlistItemById(
    request: DeleteWishlistItemByIdRequest,
    callback: (error: ServiceError | null, response: DeleteWishlistItemByIdResponse) => void,
  ): ClientUnaryCall;
  deleteWishlistItemById(
    request: DeleteWishlistItemByIdRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: DeleteWishlistItemByIdResponse) => void,
  ): ClientUnaryCall;
  deleteWishlistItemById(
    request: DeleteWishlistItemByIdRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: DeleteWishlistItemByIdResponse) => void,
  ): ClientUnaryCall;
}

export const WishlistServiceClient = makeGenericClientConstructor(
  WishlistServiceService,
  "commerce.WishlistService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): WishlistServiceClient;
  service: typeof WishlistServiceService;
  serviceName: string;
};
