// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: v1/payment/enum.proto

/* eslint-disable */

export const protobufPackage = "payment";

export enum PaymentStatus {
  PENDING = 0,
  PARTIAL = 1,
  SUCCESS = 2,
  FAILED = 3,
  UNRECOGNIZED = -1,
}

export function paymentStatusFromJSON(object: any): PaymentStatus {
  switch (object) {
    case 0:
    case "PENDING":
      return PaymentStatus.PENDING;
    case 1:
    case "PARTIAL":
      return PaymentStatus.PARTIAL;
    case 2:
    case "SUCCESS":
      return PaymentStatus.SUCCESS;
    case 3:
    case "FAILED":
      return PaymentStatus.FAILED;
    case -1:
    case "UNRECOGNIZED":
    default:
      return PaymentStatus.UNRECOGNIZED;
  }
}

export function paymentStatusToJSON(object: PaymentStatus): string {
  switch (object) {
    case PaymentStatus.PENDING:
      return "PENDING";
    case PaymentStatus.PARTIAL:
      return "PARTIAL";
    case PaymentStatus.SUCCESS:
      return "SUCCESS";
    case PaymentStatus.FAILED:
      return "FAILED";
    case PaymentStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ProviderMethod {
  BANK = 0,
  CRYPTO_CURRENCY = 1,
  DEBIT = 2,
  CREDIT = 3,
  CASH_ON_DELIVERY = 4,
  UNRECOGNIZED = -1,
}

export function providerMethodFromJSON(object: any): ProviderMethod {
  switch (object) {
    case 0:
    case "BANK":
      return ProviderMethod.BANK;
    case 1:
    case "CRYPTO_CURRENCY":
      return ProviderMethod.CRYPTO_CURRENCY;
    case 2:
    case "DEBIT":
      return ProviderMethod.DEBIT;
    case 3:
    case "CREDIT":
      return ProviderMethod.CREDIT;
    case 4:
    case "CASH_ON_DELIVERY":
      return ProviderMethod.CASH_ON_DELIVERY;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ProviderMethod.UNRECOGNIZED;
  }
}

export function providerMethodToJSON(object: ProviderMethod): string {
  switch (object) {
    case ProviderMethod.BANK:
      return "BANK";
    case ProviderMethod.CRYPTO_CURRENCY:
      return "CRYPTO_CURRENCY";
    case ProviderMethod.DEBIT:
      return "DEBIT";
    case ProviderMethod.CREDIT:
      return "CREDIT";
    case ProviderMethod.CASH_ON_DELIVERY:
      return "CASH_ON_DELIVERY";
    case ProviderMethod.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
