// This file is @generated by prost-build.
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum EnumRole {
    Customer = 0,
    CustomerMembership = 1,
    Admin = 5505,
    SuperAdmin = 5506,
}
impl EnumRole {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Customer => "CUSTOMER",
            Self::CustomerMembership => "CUSTOMER_MEMBERSHIP",
            Self::Admin => "ADMIN",
            Self::SuperAdmin => "SUPER_ADMIN",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CUSTOMER" => Some(Self::Customer),
            "CUSTOMER_MEMBERSHIP" => Some(Self::CustomerMembership),
            "ADMIN" => Some(Self::Admin),
            "SUPER_ADMIN" => Some(Self::SuperAdmin),
            _ => None,
        }
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MethodAccessControl {
    #[prost(bool, tag = "1")]
    pub is_public: bool,
    #[prost(enumeration = "EnumRole", repeated, tag = "2")]
    pub roles: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, optional, tag = "3")]
    pub http: ::core::option::Option<Http>,
    #[prost(message, optional, tag = "5")]
    pub broker: ::core::option::Option<Broker>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Http {
    #[prost(string, tag = "1")]
    pub url: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub method: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Broker {
    #[prost(string, tag = "1")]
    pub event_type: ::prost::alloc::string::String,
}
