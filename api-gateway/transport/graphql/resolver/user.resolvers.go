package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"
	"time"

	"github.com/ferza17/ecommerce-microservices-v2/api-gateway/model/graph/gen"
	"github.com/ferza17/ecommerce-microservices-v2/api-gateway/model/rpc/pb"
)

// CreatedAt is the resolver for the createdAt field.
func (r *userResolver) CreatedAt(ctx context.Context, obj *pb.User) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - createdAt"))
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *userResolver) UpdatedAt(ctx context.Context, obj *pb.User) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updatedAt"))
}

// DiscardedAt is the resolver for the discardedAt field.
func (r *userResolver) DiscardedAt(ctx context.Context, obj *pb.User) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: DiscardedAt - discardedAt"))
}

// User returns gen.UserResolver implementation.
func (r *Resolver) User() gen.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
