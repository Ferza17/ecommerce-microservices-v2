package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"

	"github.com/ferza17/ecommerce-microservices-v2/api-gateway/model/rpc/pb"
)

// FindUserByID is the resolver for the findUserById field.
func (r *queryResolver) FindUserByID(ctx context.Context, id string) (*pb.User, error) {
	ctx, span := r.TelemetryInfrastructure.Tracer(ctx, "Resolver.FindUserByID")
	defer span.End()
	panic(fmt.Errorf("not implemented: FindUserByID - findUserById"))
}

// FindUserByEmailAndPassword is the resolver for the findUserByEmailAndPassword field.
func (r *queryResolver) FindUserByEmailAndPassword(ctx context.Context, input pb.FindUserByEmailAndPasswordRequest) (*pb.User, error) {
	ctx, span := r.TelemetryInfrastructure.Tracer(ctx, "Resolver.FindUserByEmailAndPassword")
	defer span.End()
	panic(fmt.Errorf("not implemented: FindUserByEmailAndPassword - findUserByEmailAndPassword"))
}
