package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"time"

	"github.com/ferza17/ecommerce-microservices-v2/api-gateway/model/graph/gen"
	"github.com/ferza17/ecommerce-microservices-v2/api-gateway/model/rpc/pb"
)

// CratedAt is the resolver for the crated_at field.
func (r *cartItemResolver) CratedAt(ctx context.Context, obj *pb.CartItem) (*time.Time, error) {
	c := obj.CratedAt.AsTime()
	return &c, nil
}

// UpdatedAt is the resolver for the updated_at field.
func (r *cartItemResolver) UpdatedAt(ctx context.Context, obj *pb.CartItem) (*time.Time, error) {
	c := obj.UpdatedAt.AsTime()
	return &c, nil
}

// CartItem returns gen.CartItemResolver implementation.
func (r *Resolver) CartItem() gen.CartItemResolver { return &cartItemResolver{r} }

type cartItemResolver struct{ *Resolver }
