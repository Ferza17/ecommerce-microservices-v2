package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"
	"time"

	gen1 "github.com/ferza17/ecommerce-microservices-v2/api-gateway/model/graph/gen"
	gen "github.com/ferza17/ecommerce-microservices-v2/api-gateway/model/rpc/gen/payment/v1"
)

// CreatedAt is the resolver for the createdAt field.
func (r *paymentResolver) CreatedAt(ctx context.Context, obj *gen.Payment) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - createdAt"))
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *paymentResolver) UpdatedAt(ctx context.Context, obj *gen.Payment) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updatedAt"))
}

// DiscardedAt is the resolver for the discardedAt field.
func (r *paymentResolver) DiscardedAt(ctx context.Context, obj *gen.Payment) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: DiscardedAt - discardedAt"))
}

// CreatedAt is the resolver for the createdAt field.
func (r *paymentItemResolver) CreatedAt(ctx context.Context, obj *gen.PaymentItem) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - createdAt"))
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *paymentItemResolver) UpdatedAt(ctx context.Context, obj *gen.PaymentItem) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updatedAt"))
}

// DiscardedAt is the resolver for the discardedAt field.
func (r *paymentItemResolver) DiscardedAt(ctx context.Context, obj *gen.PaymentItem) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: DiscardedAt - discardedAt"))
}

// Items is the resolver for the items field.
func (r *createPaymentRequestResolver) Items(ctx context.Context, obj *gen.CreatePaymentRequest, data *gen1.PaymentItemInput) error {
	panic(fmt.Errorf("not implemented: Items - items"))
}

// Payment returns gen1.PaymentResolver implementation.
func (r *Resolver) Payment() gen1.PaymentResolver { return &paymentResolver{r} }

// PaymentItem returns gen1.PaymentItemResolver implementation.
func (r *Resolver) PaymentItem() gen1.PaymentItemResolver { return &paymentItemResolver{r} }

// CreatePaymentRequest returns gen1.CreatePaymentRequestResolver implementation.
func (r *Resolver) CreatePaymentRequest() gen1.CreatePaymentRequestResolver {
	return &createPaymentRequestResolver{r}
}

type paymentResolver struct{ *Resolver }
type paymentItemResolver struct{ *Resolver }
type createPaymentRequestResolver struct{ *Resolver }
