package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"

	"github.com/ferza17/ecommerce-microservices-v2/api-gateway/enum"
	gen "github.com/ferza17/ecommerce-microservices-v2/api-gateway/model/rpc/gen/product/v1"
)

// FindProductsWithPagination is the resolver for the findProductsWithPagination field.
func (r *queryResolver) FindProductsWithPagination(ctx context.Context, filter gen.FindProductsWithPaginationRequest) (*gen.FindProductsWithPaginationResponse, error) {
	ctx, span := r.TelemetryInfrastructure.Tracer(ctx, "Resolver.FindProductsWithPagination")
	defer span.End()
	return r.ProductUseCase.FindProductsWithPagination(ctx, ctx.Value(enum.XRequestIDHeader.String()).(string), &filter)
}

// FindProductByID is the resolver for the findProductById field.
func (r *queryResolver) FindProductByID(ctx context.Context, id string) (*gen.Product, error) {
	ctx, span := r.TelemetryInfrastructure.Tracer(ctx, "Resolver.FindProductByID")
	defer span.End()
	return r.ProductUseCase.FindProductById(ctx, ctx.Value(enum.XRequestIDHeader.String()).(string), &gen.FindProductByIdRequest{Id: id})
}
