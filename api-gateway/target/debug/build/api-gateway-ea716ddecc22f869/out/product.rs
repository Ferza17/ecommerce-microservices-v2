// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Product {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub description: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub uom: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub image: ::prost::alloc::string::String,
    #[prost(double, tag = "6")]
    pub price: f64,
    #[prost(int64, tag = "7")]
    pub stock: i64,
    #[prost(message, optional, tag = "8")]
    pub created_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "9")]
    pub updated_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "10")]
    pub discarded_at: ::core::option::Option<::prost_types::Timestamp>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FindProductsWithPaginationRequest {
    #[prost(string, repeated, tag = "1")]
    pub ids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, repeated, tag = "2")]
    pub names: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(int32, tag = "3")]
    pub page: i32,
    #[prost(int32, tag = "4")]
    pub limit: i32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FindProductByIdRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateProductRequest {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub description: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub uom: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub image: ::prost::alloc::string::String,
    #[prost(double, tag = "5")]
    pub price: f64,
    #[prost(int32, tag = "6")]
    pub stock: i32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdateProductByIdRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, optional, tag = "2")]
    pub name: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "3")]
    pub description: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "4")]
    pub uom: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "5")]
    pub image: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(double, optional, tag = "6")]
    pub price: ::core::option::Option<f64>,
    #[prost(int32, optional, tag = "7")]
    pub stock: ::core::option::Option<i32>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteProductByIdRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FindProductsWithPaginationResponse {
    #[prost(string, tag = "1")]
    pub status: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub message: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<
        find_products_with_pagination_response::FindProductsWithPaginationResponseData,
    >,
}
/// Nested message and enum types in `FindProductsWithPaginationResponse`.
pub mod find_products_with_pagination_response {
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct FindProductsWithPaginationResponseData {
        #[prost(message, repeated, tag = "1")]
        pub data: ::prost::alloc::vec::Vec<super::Product>,
        #[prost(int32, tag = "2")]
        pub limit: i32,
        #[prost(int32, tag = "3")]
        pub page: i32,
        #[prost(int32, tag = "4")]
        pub total: i32,
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateProductResponse {
    #[prost(string, tag = "1")]
    pub status: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub message: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<create_product_response::CreateProductResponseData>,
}
/// Nested message and enum types in `CreateProductResponse`.
pub mod create_product_response {
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct CreateProductResponseData {
        #[prost(string, tag = "1")]
        pub id: ::prost::alloc::string::String,
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteProductByIdResponse {
    #[prost(string, tag = "1")]
    pub status: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub message: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<
        delete_product_by_id_response::DeleteProductByIdResponseData,
    >,
}
/// Nested message and enum types in `DeleteProductByIdResponse`.
pub mod delete_product_by_id_response {
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct DeleteProductByIdResponseData {
        #[prost(string, tag = "1")]
        pub message: ::prost::alloc::string::String,
    }
}
