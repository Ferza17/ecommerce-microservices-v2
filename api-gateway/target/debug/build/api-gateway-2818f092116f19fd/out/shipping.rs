// This file is @generated by prost-build.
/// SHIPPING PROTO DEFINITION
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateShippingRequest {
    #[prost(string, tag = "1")]
    pub user_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub payment_id: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub shipping_provider_id: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetShippingByIdRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ListShippingRequest {
    #[prost(uint32, tag = "1")]
    pub page: u32,
    #[prost(uint32, tag = "2")]
    pub limit: u32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdateShippingRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub user_id: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub payment_id: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub shipping_provider_id: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteShippingRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
}
/// SHIPPING PROVIDER PROTO DEFINITION
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetShippingProviderByIdRequest {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ListShippingProvidersRequest {
    #[prost(uint32, tag = "1")]
    pub page: u32,
    #[prost(uint32, tag = "2")]
    pub limit: u32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShippingProvider {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub created_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "4")]
    pub updated_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "5")]
    pub discarded_at: ::core::option::Option<::prost_types::Timestamp>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Shipping {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub user_id: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub payment_id: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub shipping_provider_id: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "100")]
    pub created_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "1002")]
    pub updated_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "1003")]
    pub discarded_at: ::core::option::Option<::prost_types::Timestamp>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShippingFullResponse {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "2")]
    pub user: ::core::option::Option<super::user::User>,
    #[prost(message, optional, tag = "3")]
    pub payment: ::core::option::Option<super::payment::Payment>,
    #[prost(message, optional, tag = "4")]
    pub shipping_provider: ::core::option::Option<ShippingProvider>,
    #[prost(message, optional, tag = "100")]
    pub created_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "1002")]
    pub updated_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "1003")]
    pub discarded_at: ::core::option::Option<::prost_types::Timestamp>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateShippingResponse {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<
        create_shipping_response::CreateShippingResponseData,
    >,
}
/// Nested message and enum types in `CreateShippingResponse`.
pub mod create_shipping_response {
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct CreateShippingResponseData {
        #[prost(string, tag = "1")]
        pub id: ::prost::alloc::string::String,
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetShippingByIdResponse {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<ShippingFullResponse>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListShippingResponse {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "3")]
    pub data: ::prost::alloc::vec::Vec<Shipping>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdateShippingResponse {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<
        update_shipping_response::UpdateShippingResponseData,
    >,
}
/// Nested message and enum types in `UpdateShippingResponse`.
pub mod update_shipping_response {
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct UpdateShippingResponseData {
        #[prost(string, tag = "1")]
        pub id: ::prost::alloc::string::String,
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteShippingResponse {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<
        delete_shipping_response::DeleteShippingResponseData,
    >,
}
/// Nested message and enum types in `DeleteShippingResponse`.
pub mod delete_shipping_response {
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct DeleteShippingResponseData {
        #[prost(string, tag = "1")]
        pub id: ::prost::alloc::string::String,
    }
}
/// SHIPPING PROVIDER PROTO DEFINITION
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetShippingProviderByIdResponse {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<ShippingProvider>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListShippingProvidersResponse {
    #[prost(string, tag = "1")]
    pub message: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub data: ::core::option::Option<
        list_shipping_providers_response::ListShippingProvidersResponseData,
    >,
}
/// Nested message and enum types in `ListShippingProvidersResponse`.
pub mod list_shipping_providers_response {
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct ListShippingProvidersResponseData {
        #[prost(message, repeated, tag = "1")]
        pub shipping_providers: ::prost::alloc::vec::Vec<super::ShippingProvider>,
        #[prost(uint32, tag = "2")]
        pub total_count: u32,
        #[prost(uint32, tag = "3")]
        pub page: u32,
        #[prost(uint32, tag = "4")]
        pub limit: u32,
    }
}
